<Window x:Class="Naya.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dodai="http://schemas.dodai.net/2013/wpf"
        xmlns:v="clr-namespace:Naya"
        Title="Naya" Height="800" Width="800">
    <Window.Resources>
        <dodai:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
        <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Window.Resources>
    <Window.DataContext>
        <v:MainViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File(_F)">
                <MenuItem Header="New(_N)" ItemsSource="{Binding Path=FileNewMenus}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Path=Label}" />
                            <Setter Property="Command" Value="{Binding Path=Command}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="Open(_O)" ItemsSource="{Binding Path=FileOpenMenus}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Path=Label}" />
                            <Setter Property="Command" Value="{Binding Path=Command}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Header="Save(_S)" ItemsSource="{Binding Path=FileSaveMenus}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Path=Label}" />
                            <Setter Property="Command" Value="{Binding Path=Command}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit(_X)" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="Edit(_E)">
                <MenuItem Header="Undo" />
                <MenuItem Header="Redo" />
            </MenuItem>
            <MenuItem Header="View(_V)" ItemsSource="{Binding Path=ViewMenus}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding Path=Label}" />
                        <Setter Property="Command" Value="{Binding Path=Command}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="Tools(_T)" ItemsSource="{Binding Path=ToolMenus}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding Path=Label}" />
                        <Setter Property="Command" Value="{Binding Path=Command}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="Window(_W)" ItemsSource="{Binding Path=Tools}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="IsCheckable" Value="true" />
                        <Setter Property="IsChecked" Value="{Binding Path=IsVisible}" />
                        <Setter Property="Header" Value="{Binding Path=Title}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="Help(_H)">
                <Separator />
                <MenuItem Header="About(_A)" Command="{Binding AboutCommand}" />
            </MenuItem>
        </Menu>
        <avalonDock:DockingManager x:Name="dockManager"
                                   Grid.Row="1"
                                   ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                                   DocumentsSource="{Binding Documents}"
                                   AnchorablesSource="{Binding Tools}">
            <avalonDock:DockingManager.Theme>
                <avalonDock:VS2010Theme />
            </avalonDock:DockingManager.Theme>
            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <dodai:PanelStyleSelector>
                    <dodai:PanelStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        </Style>
                    </dodai:PanelStyleSelector.ToolStyle>
                    <dodai:PanelStyleSelector.DocumentStyle>
                        <Style TargetType="{x:Type avalonDock:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        </Style>
                    </dodai:PanelStyleSelector.DocumentStyle>
                </dodai:PanelStyleSelector>
            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
            <avalonDock:DockingManager.LayoutUpdateStrategy>
                <dodai:LayoutUpdater />
            </avalonDock:DockingManager.LayoutUpdateStrategy>
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel x:Name="VerticalPanel" Orientation="Vertical">
                    <avalonDock:LayoutPanel x:Name="HorizontalPanel" Orientation="Horizontal">
                        <avalonDock:LayoutPanel Orientation="Vertical">
                            <avalonDock:LayoutDocumentPane />
                        </avalonDock:LayoutPanel>
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
            <avalonDock:DockingManager.LayoutItemTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding PanelView}" />
                </DataTemplate>
            </avalonDock:DockingManager.LayoutItemTemplate>
        </avalonDock:DockingManager>
    </Grid>
</Window>
